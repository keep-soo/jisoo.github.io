/* ========================================= */
/* 1. 기본 설정                */
/* ========================================= */

/* CSS 변수 (Custom Properties): 웹사이트 전체에서 재사용될 색상 값을 정의합니다. */
:root {
    --primary-color: #007bff; /* 주요 강조 색상 (파란색 계열) */
    --secondary-color: #6c757d; /* 보조 색상 (회색 계열) */
    --dark-color: #343a40;      /* 어두운 텍스트/배경 색상 */
    --light-color: #f8f9fa;     /* 밝은 배경/요소 색상 */
    --text-color: #212529;      /* 기본 텍스트 색상 */
    --white-color: #ffffff;     /* 흰색 */
    --gray-bg: #f5f5f5;         /* 회색 배경 색상 */
}

/* 모든 요소에 대한 CSS Reset 및 기본 박스 모델 설정 */
* {
    margin: 0;           /* 모든 요소의 외부 여백(마진)을 0으로 초기화 */
    padding: 0;          /* 모든 요소의 내부 여백(패딩)을 0으로 초기화 */
    box-sizing: border-box; /* 모든 요소의 크기 계산 방식을 'border-box'로 설정합니다.
                               이는 패딩과 테두리가 요소의 너비/높이에 포함되도록 하여 레이아웃 계산을 직관적으로 만듭니다. */
}

/* HTML 루트 요소에 대한 기본 설정 */
html {
    scroll-behavior: smooth; /* 사용자 스크롤 또는 링크 클릭 시 페이지 이동을 부드럽게 애니메이션화합니다. */
}

/* Body 태그에 대한 기본 텍스트 및 배경 설정 */
body {
    font-family: 'Noto Sans KR', sans-serif; /* 웹폰트 'Noto Sans KR'을 기본 폰트로 설정하고, 없으면 일반 산세리프 폰트를 사용합니다. */
    line-height: 1.6; /* 텍스트 줄 간격을 폰트 크기의 1.6배로 설정하여 가독성을 높입니다. */
    color: var(--text-color); /* `--text-color` 변수를 사용하여 기본 텍스트 색상을 설정합니다. */
    background-color: var(--white-color); /* `--white-color` 변수를 사용하여 페이지 기본 배경색을 설정합니다. */
}

/* 링크(a 태그)에 대한 기본 설정 */
a {
    text-decoration: none; /* 링크의 기본 밑줄을 제거합니다. */
    color: var(--primary-color); /* 링크 색상을 `--primary-color` 변수로 설정하여 일관된 강조 색상을 적용합니다. */
}

/* 목록(ul 태그)에 대한 기본 설정 */
ul {
     list-style: none; /* 목록 항목 앞에 표시되는 기본 마커(불릿, 숫자 등)를 제거합니다. */
}

/* 이미지(img 태그)에 대한 기본 반응형 및 레이아웃 설정 */
img {
    max-width: 100%; /* 이미지의 최대 너비를 부모 요소의 100%로 제한하여, 이미지가 부모를 넘어서지 않도록 합니다. */
    height: auto;    /* 높이를 자동으로 조정하여 이미지의 원본 가로세로 비율을 유지하도록 합니다. */
    display: block;  /* 이미지를 블록 레벨 요소로 설정하여 독립적인 줄에 배치하고 마진/패딩 설정을 용이하게 합니다. */
}

/* 제목(h1, h2, h3 태그)에 대한 기본 여백 및 색상 설정 */
h1, h2, h3 {
  margin-bottom: 1rem; /* 각 제목 아래쪽에 1rem (상대 단위)의 외부 여백을 추가하여 다음 콘텐츠와의 간격을 줍니다. */
    color: var(--dark-color); /* `--dark-color` 변수를 사용하여 제목 텍스트의 색상을 설정합니다. */
}

/* ========================================= */
/* 2. 레이아웃 컴포넌트            */
/* ========================================= */

/* 컨테이너 클래스: 페이지 콘텐츠를 중앙에 정렬하고 최대 너비를 제한하여 가독성을 높입니다. */
.container {
    max-width: 1200px; /* 컨테이너의 최대 너비를 1200픽셀로 제한합니다. */
    margin: 0 auto;    /* `0 auto`는 상하 마진은 0, 좌우 마진은 자동으로 설정하여 블록 요소를 가로 방향으로 중앙에 배치합니다. */
    padding: 0 20px;   /* 좌우에 20픽셀의 내부 여백(패딩)을 추가하여 콘텐츠가 브라우저 가장자리에 붙지 않도록 합니다. */
}

/* 일반 버튼(.btn) 스타일 */
.btn {
    display: inline-block; /* 요소를 인라인 블록 레벨 요소로 설정하여 텍스트처럼 줄 안에 배치되면서 너비/높이, 패딩/마진을 가질 수 있게 합니다. */
    background: var(--primary-color); /* 배경색을 `--primary-color` 변수로 설정합니다. */
    color: var(--white-color); /* 텍스트 색상을 `--white-color` 변수로 설정합니다. */
    padding: 10px 20px; /* 상하 10px, 좌우 20px의 내부 여백을 설정합니다. */
    border-radius: 5px; /* 모서리를 5px만큼 둥글게 처리합니다. */
    transition: background-color 0.3s ease; /* 배경색이 변경될 때 0.3초 동안 부드럽게 애니메이션되도록 설정합니다. */
    margin-top: 1rem; /* 버튼 위쪽에 1rem의 외부 여백을 추가합니다. */
}

/* 일반 버튼(.btn)의 호버(마우스 오버) 상태 스타일 */
.btn:hover {
    background-color: #0056b3; /* 마우스를 올렸을 때 배경색을 더 어두운 파란색으로 변경합니다. */
}

/* 작은 버튼(.btn-small) 스타일 */
.btn-small {
    display: inline-block; /* 요소를 인라인 블록 레벨 요소로 설정합니다. */
    background: var(--secondary-color); /* 배경색을 `--secondary-color` 변수로 설정합니다. */
    color: var(--white-color); /* 텍스트 색상을 `--white-color` 변수로 설정합니다. */
    padding: 5px 10px; /* 상하 5px, 좌우 10px의 내부 여백을 설정합니다. */
    font-size: 0.9rem; /* 글꼴 크기를 기본 글꼴 크기의 0.9배로 줄입니다. */
    border-radius: 3px; /* 모서리를 3px만큼 둥글게 처리합니다. */
    transition: background-color 0.3s ease; /* 배경색 변경 시 0.3초 동안 부드럽게 전환합니다. */
    margin-right: 5px; /* 버튼 오른쪽에 5px의 외부 여백을 추가합니다. */
    margin-top: 0.5rem; /* 버튼 위쪽에 0.5rem의 외부 여백을 추가합니다. */
}

/* 작은 버튼(.btn-small)의 호버(마우스 오버) 상태 스타일 */
.btn-small:hover {
    background-color: #5a6268; /* 마우스를 올렸을 때 배경색을 더 어두운 회색으로 변경합니다. */
}

/* ========================================= */
/* 3. 특정 섹션 스타일             */
/* ========================================= */

/* --- Header & Navigation --- */
#header {
    background: var(--white-color); /* 헤더의 배경색을 `--white-color` 변수로 설정합니다. */
    color: var(--dark-color); /* 헤더 내 텍스트의 기본 색상을 `--dark-color` 변수로 설정합니다. */
    padding: 1rem 0; /* 헤더의 상하 패딩을 1rem, 좌우 패딩을 0으로 설정합니다. */
    border-bottom: 1px solid var(--gray-bg); /* 헤더 하단에 1px 두께의 `--gray-bg` 색상 테두리를 추가합니다. */
    position: fixed; /* 헤더를 뷰포트(브라우저 창)에 고정하여 스크롤해도 항상 상단에 보이도록 합니다. */
    width: 100%; /* 헤더의 너비를 뷰포트의 100%로 설정합니다. */
    top: 0; /* 헤더를 뷰포트의 최상단에 고정합니다. */
    left: 0; /* 헤더를 뷰포트의 최좌측에 고정합니다. */
    z-index: 1000; /* 헤더의 z-index를 높게 설정하여 다른 콘텐츠 위에 항상 표시되도록 합니다. */
    box-shadow: 0 2px 5px rgba(0,0,0,0.05); /* 헤더 아래쪽에 부드러운 그림자 효과를 추가하여 입체감을 줍니다. */
}

/* 헤더 내부 컨테이너의 플렉스박스 설정 */
#header .container {
    display: flex; /* 자식 요소(로고와 내비게이션 리스트)들을 플렉스 아이템으로 설정합니다. */
    justify-content: space-between; /* 플렉스 아이템들을 컨테이너의 양쪽 끝으로 정렬하고 그 사이 공간을 균등하게 분배합니다. */
    align-items: center; /* 플렉스 아이템들을 수직 방향(교차 축)으로 중앙에 정렬합니다. */
}

/* 로고 링크 스타일 */
.logo a {
    font-size: 1.8rem; /* 로고 텍스트의 글꼴 크기를 1.8rem으로 설정합니다. */
    font-weight: 700; /* 글꼴 두께를 굵게 설정합니다. */
    color: var(--dark-color); /* 로고 텍스트의 색상을 `--dark-color` 변수로 설정합니다. */
}

/* 내비게이션 리스트 스타일 */
.nav-list {
    display: flex; /* 내비게이션 목록 항목(li)들을 가로로 나열하기 위해 플렉스 컨테이너로 설정합니다. */
}

/* 내비게이션 목록 항목(li) 스타일 */
.nav-list li {
    margin-left: 30px; /* 각 목록 항목의 왼쪽에 30px의 외부 여백을 추가하여 항목 간 간격을 줍니다. */
}

/* 내비게이션 링크(a) 스타일 */
.nav-list a {
    color: var(--dark-color); /* 내비게이션 링크의 기본 색상을 `--dark-color` 변수로 설정합니다. */
    font-weight: 500; /* 글꼴 두께를 중간 정도로 설정합니다. */
    transition: color 0.3s ease; /* 링크 색상 변경 시 0.3초 동안 부드럽게 전환되도록 설정합니다. */
}

/* 내비게이션 링크의 호버 및 활성 상태 스타일 */
.nav-list a:hover,
.nav-list a.active {
    color: var(--primary-color); /* 마우스를 올렸을 때 또는 현재 활성화된 링크의 색상을 `--primary-color` 변수로 변경합니다. */
}

/* --- Hero Section (메인 비주얼 영역) --- */
.hero-section {
    height: 100vh; /* 뷰포트 높이의 100%로 높이를 설정하여 화면 전체를 차지하게 합니다. */
    display: flex; /* 자식 요소(hero-content)들을 플렉스 컨테이너로 설정합니다. */
    align-items: center; /* 플렉스 아이템들을 수직 중앙으로 정렬합니다. */
    justify-content: center; /* 플렉스 아이템들을 수평 중앙으로 정렬합니다. */
    text-align: center; /* 섹션 내 모든 텍스트를 중앙으로 정렬합니다. */
    color: var(--white-color); /* 이 섹션 내 텍스트의 기본 색상을 `--white-color` 변수로 설정합니다. */
    padding-top: 80px; /* 상단에 80px의 내부 여백을 추가합니다. 이는 고정된 헤더에 의해 콘텐츠가 가려지지 않도록 보정하는 역할을 합니다. */

    /* 움직이는 그라데이션 배경 효과 */
    background: linear-gradient(135deg, #007bff, #4CAF50, #00BCD4, #FFC107); /* 135도 방향으로 여러 색상이 변화하는 선형 그라데이션 배경을 설정합니다. */
    background-size: 400% 400%; /* 배경 이미지의 크기를 컨테이너의 400%로 설정하여, 애니메이션 시 배경이 움직일 충분한 공간을 확보합니다. */
    animation: gradientAnimation 15s ease infinite; /* `gradientAnimation`이라는 사용자 정의 애니메이션을 15초 동안 부드럽게(ease) 무한 반복 적용합니다. */
}

/* Hero Section 내 텍스트 요소의 초기 상태 (JavaScript로 제어됨) */
.hero-content .greeting,
.hero-content h2,
.hero-content .intro-text,
.hero-content .btn {
    opacity: 0; /* JavaScript를 통해 페이드인 효과를 주기 위해 초기 투명도를 0으로 설정하여 숨깁니다. */
}

/* Hero Section의 인삿말 (.greeting) 스타일 */
.hero-content .greeting {
    font-size: 1.5rem; /* 글꼴 크기를 1.5rem으로 설정합니다. */
    margin-bottom: 10px; /* 아래쪽에 10px의 외부 여백을 추가합니다. */
}

/* Hero Section의 제목 (h2) 스타일 */
.hero-content h2 {
    font-size: 2.5rem; /* 글꼴 크기를 2.5rem으로 설정합니다. */
    margin-bottom: 20px; /* 아래쪽에 20px의 외부 여백을 추가합니다. */
    line-height: 1.7; /* 줄 간격을 1.7배로 설정하여 텍스트 가독성을 높입니다. */
    color: var(--white-color); /* 텍스트 색상을 `--white-color` 변수로 설정합니다. */
}

/* Hero Section의 소개 텍스트 (.intro-text) 스타일 */
.hero-content .intro-text {
    font-size: 1.1rem; /* 글꼴 크기를 1.1rem으로 설정합니다. */
    margin-bottom: 30px; /* 아래쪽에 30px의 외부 여백을 추가합니다. */
    opacity: 0.9; /* 텍스트의 투명도를 0.9로 설정하여 약간 흐릿하게 만듭니다. */
}

/* --- Common Section Styles (공통 섹션 스타일) --- */
.common-section {
    padding: 80px 0; /* 모든 공통 섹션의 상하 패딩을 80px, 좌우 패딩을 0으로 설정합니다. */
    text-align: center; /* 섹션 내 모든 텍스트를 중앙으로 정렬합니다. */
}

/* 짝수 번째 common-section 요소에만 배경색 적용 */
.common-section:nth-of-type(even) {
    background-color: var(--gray-bg); /* 짝수 번째 섹션의 배경색을 `--gray-bg` 변수로 설정하여 시각적 구분을 줍니다. */
}

/* 공통 섹션의 제목 (h2) 스타일 */
.common-section h2 {
    font-size: 2.5rem; /* 글꼴 크기를 2.5rem으로 설정합니다. */
    margin-bottom: 40px; /* 아래쪽에 40px의 외부 여백을 추가합니다. */
    position: relative; /* `::after` 가상 요소의 `position: absolute`를 위한 기준점을 설정합니다. */
    display: inline-block; /* 요소를 인라인 블록으로 설정하여 너비와 높이를 내용에 맞추고, `margin: auto`를 사용하여 중앙 정렬이 가능하게 합니다. */
}

/* 공통 섹션 제목 아래의 밑줄 효과 (::after 가상 요소 사용) */
.common-section h2::after {
    content: ''; /* 가상 요소의 내용을 비워두어 시각적인 밑줄로만 사용합니다. */
    display: block; /* 가상 요소를 블록 레벨 요소로 설정하여 독립적인 줄에 배치합니다. */
    width: 60px; /* 밑줄의 너비를 60px로 설정합니다. */
    height: 4px; /* 밑줄의 높이를 4px로 설정합니다. */
    background: var(--primary-color); /* 밑줄의 배경색을 `--primary-color` 변수로 설정합니다. */
    margin: 10px auto 0; /* 위쪽 10px, 좌우 자동(중앙 정렬), 아래쪽 0의 외부 여백을 설정합니다. */
    border-radius: 2px; /* 밑줄의 모서리를 2px만큼 둥글게 처리합니다. */
}

/* --- About Section (소개 섹션) --- */
.about-section .about-content {
    display: flex; /* 자식 요소(프로필 이미지와 텍스트)들을 플렉스 컨테이너로 설정합니다. */
    flex-wrap: wrap; /* 컨테이너 너비를 초과할 경우, 자식 요소들이 다음 줄로 줄 바꿈되도록 허용합니다. */
    align-items: center; /* 플렉스 아이템들을 수직 방향(교차 축)으로 중앙에 정렬합니다. */
    justify-content: center; /* 플렉스 아이템들을 수평 방향(주 축)으로 중앙에 정렬합니다. */
    gap: 40px; /* 플렉스 아이템 사이의 가로 및 세로 간격을 40px로 설정합니다. */
}

/* 프로필 이미지 컨테이너 스타일 */
.about-section .profile-image {
    flex: 1; /* flex-grow, flex-shrink, flex-basis를 1로 설정하여, 남은 공간을 균등하게 채우도록 합니다. */
    min-width: 250px; /* 최소 너비를 250px로 설정하여 너무 작아지지 않도록 합니다. */
    max-width: 300px; /* 최대 너비를 300px로 설정하여 너무 커지지 않도록 합니다. */
    position: relative; /* 자식 이미지의 `position: absolute`를 위한 기준점을 설정합니다. */
    overflow: hidden; /* 요소 범위를 넘어가는 내용을 숨깁니다. (특히 원형 이미지에서 유용) */
    border-radius: 50%; /* 모서리 반경을 50%로 설정하여 요소를 완벽한 원형으로 만듭니다. */

    /* 프로필 이미지의 테두리 및 그림자 효과 */
    border: 5px solid var(--primary-color); /* 5px 두께의 `--primary-color` 색상 테두리를 추가합니다. */
    box-shadow: 0 5px 15px rgba(0,0,0,0.1); /* 그림자 효과를 추가하여 입체감을 줍니다. */

    /* 고정된 width/height 대신 유동적인 크기 조절을 위한 설정 */
    width: 100%; /* 너비를 부모의 100%로 설정하지만, `max-width`에 의해 제한됩니다. */
    height: 0; /* `padding-bottom`을 이용하여 비율을 유지한 높이를 설정하기 위해 초기 높이를 0으로 설정합니다. */
    padding-bottom: 33%; /* 너비의 33%만큼 아래쪽 내부 여백을 추가하여 높이를 설정합니다. */
}

/* 프로필 이미지(.profile-image img)가 부모 컨테이너에 꽉 차도록 설정 */
.about-section .profile-image img {
    position: absolute; /* 부모 `.profile-image` 요소를 기준으로 절대 위치를 지정합니다. */
    top: 0; /* 부모의 상단에 0px 위치합니다. */
    left: 0; /* 부모의 왼쪽에 0px 위치합니다. */
    width: 100%; /* 이미지의 너비를 부모 요소의 100%로 설정합니다. */
    height: 100%; /* 이미지의 높이를 부모 요소의 100%로 설정합니다. */
    object-fit: cover; /* 이미지가 잘리더라도 비율을 유지하면서 부모 요소를 꽉 채우도록 합니다. */
}

/* 프로필 텍스트 컨테이너 스타일 */
.about-section .profile-text {
    flex: 2; /* flex-grow를 2로 설정하여, 프로필 이미지가 차지하는 공간보다 2배 더 많은 공간을 차지하도록 합니다. */
    min-width: 300px; /* 최소 너비를 300px로 설정하여 가독성을 유지합니다. */
    max-width: 600px; /* 최대 너비를 600px로 설정하여 너무 넓어지지 않도록 합니다. */
    text-align: left; /* About 섹션의 텍스트를 왼쪽으로 정렬합니다. */
}

/* 프로필 텍스트 내 제목 (h3) 스타일 */
.about-section .profile-text h3 {
    font-size: 1.8rem; /* 글꼴 크기를 1.8rem으로 설정합니다. */
    color: var(--primary-color); /* 텍스트 색상을 `--primary-color` 변수로 설정합니다. */
    margin-bottom: 15px; /* 아래쪽에 15px의 외부 여백을 추가합니다. */
}

/* 프로필 텍스트 내 문단 (p) 스타일 */
.about-section .profile-text p {
    margin-bottom: 20px; /* 아래쪽에 20px의 외부 여백을 추가합니다. */
    line-height: 1.8; /* 줄 간격을 1.8배로 설정하여 텍스트 가독성을 높입니다. */
}

/* 프로필 텍스트 내 목록 항목 (li) 스타일 */
.about-section .profile-text ul li {
    margin-bottom: 8px; /* 각 목록 항목의 아래쪽에 8px의 외부 여백을 추가합니다. */
}

/* --- Skill Logos Marquee Section (기술 스택 로고 롤링 배너) --- */
.skill-logos-marquee {
    margin-top: 60px; /* 섹션 위쪽에 60px의 외부 여백을 추가합니다. */
    overflow: hidden; /* 자식 요소(롤링되는 로고들)가 이 요소의 범위를 넘어갈 경우 숨깁니다. */
    width: 100%; /* 너비를 100%로 설정합니다. */
    padding: 20px 0; /* 상하 20px, 좌우 0의 내부 여백을 추가합니다. */
    /* background-color: var(--light-color); 이 줄을 제거하여 회색 배경을 없앱니다. */
}

/* 롤링되는 콘텐츠 컨테이너 스타일 */
.marquee-content {
    display: flex; /* 자식 요소(이미지)들을 플렉스 컨테이너로 설정합니다. */
    flex-direction: row; /* 주 축 방향을 가로로 설정합니다. */
    align-items: center; /* 플렉스 아이템들을 수직 중앙으로 정렬합니다. */
    white-space: nowrap; /* 텍스트나 인라인 요소가 줄 바꿈되지 않도록 설정합니다. (모든 이미지가 한 줄에 나열) */
    animation: marquee 25s linear infinite; /* `marquee` 애니메이션을 25초 동안 선형(일정한 속도)으로 무한 반복 적용합니다. */
}

/* 마퀴(marquee) 내 이미지 스타일 */
.marquee-content img {
    height: 80px; /* 이미지의 높이를 80px로 고정합니다. */
    width: auto; /* 너비는 높이에 맞춰 자동으로 조정하여 이미지 비율을 유지합니다. */
    margin: 0 40px; /* 상하 0, 좌우 40px의 외부 여백을 추가하여 이미지 간 간격을 줍니다. */
    vertical-align: middle; /* 요소를 부모 요소의 중간에 수직 정렬합니다. (display: inline-block일 때 유효) */
    transition: transform 0.3s ease; /* `transform` 속성 변경 시 0.3초 동안 부드럽게 전환되도록 설정합니다. */
}

/* 마퀴 내 이미지의 호버 상태 스타일 */
.marquee-content img:hover {
    transform: scale(0.9); /* 마우스를 올렸을 때 이미지 크기를 0.9배로 축소합니다. */
}

/* --- Portfolio Section (Swiper 슬라이더 사용) --- */
.portfolio-section {
    position: relative; /* 자식 요소(Swiper 내비게이션 버튼 등)의 `position: absolute`를 위한 기준점을 설정합니다. */
}

/* Swiper 내비게이션 버튼 (좌우 이동 버튼) 공통 스타일 */
.swiper-button-next,
.swiper-button-prev {
    position: absolute; /* 부모 `.portfolio-section` 또는 `.swiper-container`를 기준으로 절대 위치를 지정합니다. */
    top: 50%; /* 부모 요소의 상단에서 50% 위치에 배치합니다. */
    transform: translateY(-50%); /* 자신의 높이의 절반만큼 위로 이동하여 버튼을 수직 중앙에 정확히 정렬합니다. */
    z-index: 10; /* 다른 요소들 위에 표시되도록 z-index를 높게 설정합니다. */
    color: var(--primary-color); /* 버튼 아이콘의 색상을 `--primary-color` 변수로 설정합니다. */
    opacity: 0.8; /* 버튼의 초기 투명도를 0.8로 설정합니다. */
    transition: opacity 0.3s ease; /* 투명도 변경 시 0.3초 동안 부드럽게 전환되도록 설정합니다. */
    font-size: 2.5rem; /* 버튼 아이콘의 글꼴 크기를 2.5rem으로 설정하여 적절한 크기를 제공합니다. */
    cursor: pointer; /* 마우스 오버 시 커서 모양을 포인터로 변경하여 클릭 가능함을 나타냅니다. */
    pointer-events: auto; /* 이 요소가 마우스 이벤트를 정상적으로 받도록 설정합니다. */
    width: 44px; /* 버튼의 클릭 영역 너비를 44px로 설정합니다. */
    height: 44px; /* 버튼의 클릭 영역 높이를 44px로 설정합니다. */
    margin-top: -22px; /* `top: 50%`와 함께 수직 중앙 정렬을 위한 추가 보정 (자신의 높이의 절반). */
}

/* Swiper 내비게이션 버튼의 호버 상태 스타일 */
.swiper-button-next:hover,
.swiper-button-prev:hover {
    opacity: 1; /* 마우스를 올렸을 때 투명도를 1로 변경하여 더욱 명확하게 보이게 합니다. */
}

/* Swiper 내비게이션 버튼의 비활성화 상태 스타일 */
.swiper-button-next.swiper-button-disabled,
.swiper-button-prev.swiper-button-disabled {
    opacity: 0.35; /* 버튼이 비활성화되었을 때 (예: 더 이상 이동할 슬라이드가 없을 때) 투명도를 0.35로 줄여 비활성화 상태를 시각적으로 나타냅니다. */
    cursor: auto; /* 비활성화 시 커서 모양을 기본 커서로 변경합니다. */
    pointer-events: none; /* 비활성화 시 마우스 이벤트를 받지 않도록 설정하여 클릭을 방지합니다. */
}

/* Swiper 내비게이션 버튼 아이콘의 크기 조절 (::after 가상 요소는 Swiper의 내부 아이콘을 나타냄) */
.swiper-button-next::after,
.swiper-button-prev::after {
    font-size: 2.5rem; /* 아이콘의 글꼴 크기를 2.5rem으로 유지하여 일관된 크기를 제공합니다. */
}

/* Swiper 컨테이너 스타일 */
.swiper-container {
    width: 100%; /* 너비를 100%로 설정합니다. */
    padding-bottom: 50px; /* 하단에 50px의 내부 여백을 추가합니다. 이는 페이지네이션(점)이 슬라이더 아래에 위치할 공간을 확보하기 위함입니다. */
    margin-top: 40px; /* 위쪽에 40px의 외부 여백을 추가합니다. */
    position: relative; /* 자식 요소인 버튼이나 페이지네이션의 절대 위치 기준점이 됩니다. */
    overflow: hidden; /* 컨테이너 외부로 넘어가는 슬라이드 내용을 숨깁니다. */
}

/* Swiper 페이지네이션 (하단 점들) 활성 상태 스타일 */
.swiper-pagination-bullet-active {
    background: var(--primary-color); /* 활성화된 페이지네이션 점의 배경색을 `--primary-color` 변수로 설정합니다. */
}

/* 포트폴리오 개별 항목 스타일 */
.portfolio-item {
    background-color: var(--white-color); /* 포트폴리오 항목의 배경색을 흰색으로 설정합니다. */
    border-radius: 8px; /* 모서리를 8px만큼 둥글게 처리하여 부드러운 느낌을 줍니다. */
    box-shadow: 0 4px 15px rgba(0,0,0,0.08); /* 항목에 부드러운 그림자 효과를 추가합니다. */
    overflow: hidden; /* 항목 범위를 넘어가는 내용을 숨깁니다. */
    transition: transform 0.3s ease; /* `transform` 속성 변경 시 0.3초 동안 부드럽게 전환되도록 설정합니다. */
    text-align: left; /* 텍스트를 왼쪽으로 정렬합니다. */
    height: auto; /* 높이를 콘텐츠에 따라 자동으로 설정합니다. */
    display: flex; /* 자식 요소(이미지, 정보)들을 플렉스 컨테이너로 설정합니다. */
    flex-direction: column; /* 주 축 방향을 세로로 설정하여 이미지가 위에, 정보가 아래에 오도록 합니다. */
}

/* 포트폴리오 항목의 호버 상태 스타일 */
.portfolio-item:hover {
    transform: translateY(-5px); /* 마우스를 올렸을 때 항목을 위로 5px 이동시켜 상호작용 효과를 줍니다. */
}

/* 포트폴리오 항목 내 이미지 스타일 */
.portfolio-item img {
    width: 100%; /* 이미지의 너비를 부모 항목의 100%로 설정합니다. */
    height: 200px; /* 이미지의 높이를 200px로 고정합니다. */
    object-fit: cover; /* 이미지가 잘리더라도 비율을 유지하면서 지정된 공간을 채우도록 합니다. */
    border-bottom: 1px solid var(--gray-bg); /* 이미지 하단에 1px 두께의 `--gray-bg` 색상 테두리를 추가합니다. */
}

/* 포트폴리오 항목 정보 영역 스타일 */
.portfolio-item .item-info {
    padding: 20px; /* 정보 영역의 내부 여백을 20px로 설정합니다. */
    flex-grow: 1; /* 남은 공간을 채우도록 flex-grow를 1로 설정하여 정보 영역이 가능한 한 많은 공간을 차지하도록 합니다. */
    display: flex; /* 정보 영역 내 자식 요소들을 플렉스 컨테이너로 설정합니다. */
    flex-direction: column; /* 주 축 방향을 세로로 설정합니다. */
    justify-content: space-between; /* 자식 요소들을 정보 영역의 상단과 하단으로 정렬하고 그 사이 공간을 균등하게 분배합니다. */
}

/* 포트폴리오 항목 정보 내 제목 (h3) 스타일 */
.portfolio-item .item-info h3 {
    font-size: 1.6rem; /* 글꼴 크기를 1.6rem으로 설정합니다. */
    margin-bottom: 10px; /* 아래쪽에 10px의 외부 여백을 추가합니다. */
    color: var(--dark-color); /* 텍스트 색상을 `--dark-color` 변수로 설정합니다. */
}

/* 포트폴리오 항목 정보 내 설명 (.description) 스타일 */
.portfolio-item .item-info .description {
    font-size: 0.95rem; /* 글꼴 크기를 0.95rem으로 설정합니다. */
    color: var(--secondary-color); /* 텍스트 색상을 `--secondary-color` 변수로 설정합니다. */
    margin-bottom: 15px; /* 아래쪽에 15px의 외부 여백을 추가합니다. */
}

/* 포트폴리오 항목 내 사용된 기술 스택 태그 스타일 */
.portfolio-item .item-info .skills-used span {
    display: inline-block; /* 요소를 인라인 블록 레벨 요소로 설정하여 텍스트처럼 줄 안에 배치되면서 패딩/마진을 가질 수 있게 합니다. */
    background-color: var(--primary-color); /* 배경색을 `--primary-color` 변수로 설정합니다. */
    color: var(--white-color); /* 텍스트 색상을 `--white-color` 변수로 설정합니다. */
    font-size: 0.8rem; /* 글꼴 크기를 0.8rem으로 설정하여 작은 태그처럼 보이게 합니다. */
    padding: 4px 8px; /* 상하 4px, 좌우 8px의 내부 여백을 설정합니다. */
    border-radius: 3px; /* 모서리를 3px만큼 둥글게 처리합니다. */
    margin-right: 5px; /* 각 태그의 오른쪽에 5px의 외부 여백을 추가하여 간격을 줍니다. */
    margin-bottom: 5px; /* 각 태그의 아래쪽에 5px의 외부 여백을 추가하여 여러 줄일 경우 간격을 줍니다. */
}

/* --- Contact Section (연락처 섹션) --- */
.contact-section .contact-text {
    font-size: 1.2rem; /* 글꼴 크기를 1.2rem으로 설정합니다. */
    margin-bottom: 30px; /* 아래쪽에 30px의 외부 여백을 추가합니다. */
}

/* --- Footer (푸터) --- */
footer {
    background-color: var(--dark-color); /* 푸터의 배경색을 `--dark-color` 변수로 설정합니다. */
    color: var(--white-color); /* 푸터 내 텍스트의 색상을 `--white-color` 변수로 설정합니다. */
    text-align: center; /* 푸터 내 모든 텍스트를 중앙으로 정렬합니다. */
    padding: 20px 0; /* 푸터의 상하 패딩을 20px, 좌우 패딩을 0으로 설정합니다. */
    font-size: 0.9rem; /* 글꼴 크기를 0.9rem으로 설정합니다. */
}

/* ========================================= */
/* 4. 애니메이션 키프레임          */
/* ========================================= */

/* gradientAnimation 키프레임: Hero Section의 그라데이션 배경을 부드럽게 움직이는 애니메이션을 정의합니다. */
@keyframes gradientAnimation {
    0% {
        background-position: 0% 50%; /* 애니메이션 시작 시 배경의 위치를 좌측 중앙으로 설정합니다. */
    }
    50% {
        background-position: 100% 50%; /* 애니메이션 중간 시 배경의 위치를 우측 중앙으로 이동시킵니다. */
    }
    100% {
        background-position: 0% 50%; /* 애니메이션 끝 시 배경의 위치를 다시 좌측 중앙으로 되돌립니다. (무한 반복 시 부드러운 순환) */
    }
}

/* marquee 키프레임: 기술 로고들이 끊임없이 왼쪽으로 롤링되는 애니메이션을 정의합니다. */
@keyframes marquee {
    0% { transform: translateX(0%); } /* 애니메이션 시작 시 요소의 가로 위치는 변화가 없습니다. */
    100% { transform: translateX(-33.333%); } /* 애니메이션 끝 시 요소가 왼쪽으로 자신의 너비의 약 33.333%만큼 이동합니다.
                                                  이는 롤링 효과를 위해 콘텐츠가 복제되어 있을 때 이어진 것처럼 보이게 합니다. */
}

/* ========================================= */
/* 5. 반응형 디자인              */
/* ========================================= */

/* 미디어 쿼리: 화면 너비가 768px 이하일 때 적용되는 스타일 (태블릿 및 모바일 기기) */
@media (max-width: 768px) {
    /* 헤더 컨테이너 레이아웃 조정 */
    #header .container {
        flex-direction: column; /* 자식 요소(로고, 내비게이션)들을 가로(row)에서 세로(column) 방향으로 정렬합니다. */
        text-align: center; /* 헤더 내 텍스트를 중앙 정렬합니다. */
    }

    /* 내비게이션 리스트 상단 여백 조정 */
    .nav-list {
        margin-top: 15px; /* 내비게이션 리스트 위쪽에 15px의 외부 여백을 추가하여 로고와의 간격을 줍니다. */
    }

    /* 내비게이션 목록 항목 간 여백 조정 */
    .nav-list li {
        margin: 0 15px; /* 각 목록 항목의 상하 마진은 0, 좌우 마진은 15px로 조절하여 항목 간 간격을 줄입니다. */
    }

    /* Hero Section 제목 글꼴 크기 조정 */
    .hero-content h2 {
        font-size: 2.2rem; /* Hero Section의 제목 글꼴 크기를 2.2rem으로 조절하여 작은 화면에 적합하게 만듭니다. */
    }

    /* Hero Section 텍스트 요소의 초기 투명도 설정 (JS 제어와 관계없이 초기 숨김) */
    .hero-content h2,
    .hero-content .intro-text,
    .hero-content .btn {
        opacity: 0; /* 이 요소들도 JavaScript에 의해 제어되지만, 혹시 모를 경우를 대비하여 초기 투명도를 명시적으로 0으로 설정합니다. */
    }

    /* 공통 섹션 패딩 조정 */
    .common-section {
        padding: 60px 0; /* 공통 섹션의 상하 패딩을 80px에서 60px로 줄여 모바일 화면에서 공간을 절약합니다. */
    }

    /* About 섹션 콘텐츠 레이아웃 조정 */
    .about-section .about-content {
        flex-direction: column; /* 'About' 섹션의 자식 요소들을 가로(row)에서 세로(column) 방향으로 정렬합니다. */
    }

    /* 프로필 이미지 컨테이너 하단 여백 추가 */
    .about-section .profile-image {
        margin-bottom: 20px; /* 프로필 이미지 아래쪽에 20px의 외부 여백을 추가하여 텍스트와의 간격을 줍니다. */
    }

    /* 스킬 로고 마퀴 이미지 높이 및 여백 조정 */
    .marquee-content img {
        height: 60px; /* 마퀴 이미지의 높이를 80px에서 60px로 줄입니다. */
        margin: 0 30px; /* 이미지 간 좌우 외부 여백을 40px에서 30px로 줄입니다. */
    }
    /* 마퀴 애니메이션 키프레임 재정의 (768px 이하에서만 동작) */
    @keyframes marquee {
        0% { transform: translateX(0%); } /* 애니메이션 시작 시 가로 이동 없음 */
        100% { transform: translateX(-33.333%); } /* 애니메이션 끝 시 가로로 -33.333% 이동 (재정의는 필요 없을 수 있음, 기존 키프레임 유지) */
    }

    /* Swiper 내비게이션 버튼 위치 및 크기 조정 (모바일 친화적) */
    .swiper-button-next,
    .swiper-button-prev {
        top: 40%; /* 버튼의 상단 위치를 50%에서 40%로 약간 위로 조절합니다. */
        transform: translateY(-50%); /* 자신의 높이 절반만큼 위로 이동하여 수직 중앙 정렬을 유지합니다. */
        font-size: 2rem; /* 버튼 아이콘의 글꼴 크기를 2.5rem에서 2rem으로 줄입니다. */
    }
    /* Swiper 버튼 가상 요소 (아이콘) 크기 조정 */
    .swiper-button-next::after,
    .swiper-button-prev::after {
        font-size: 2rem; /* 아이콘 크기를 2.5rem에서 2rem으로 재조정합니다. */
    }
}

/* 미디어 쿼리: 화면 너비가 480px 이하일 때 적용되는 스타일 (주로 스마트폰) */
@media (max-width: 480px) {
    /* Hero Section 제목 글꼴 크기 추가 조정 */
    .hero-content h2 {
        font-size: 1.7rem; /* Hero Section 제목의 글꼴 크기를 2.2rem에서 1.7rem으로 더 줄입니다. */
    }

    /* Hero Section 소개 텍스트 글꼴 크기 조정 */
    .hero-content .intro-text {
        font-size: 0.9rem; /* Hero Section 소개 텍스트의 글꼴 크기를 1.1rem에서 0.9rem으로 줄입니다. */
    }

    /* Hero Section 텍스트 요소의 초기 투명도 설정 (JS 제어와 관계없이 초기 숨김) */
    .hero-content h2,
    .hero-content .intro-text,
    .hero-content .btn {
        opacity: 0; /* 이 요소들도 JavaScript에 의해 제어되지만, 혹시 모를 경우를 대비하여 초기 투명도를 명시적으로 0으로 설정합니다. */
    }

    /* 공통 섹션 제목 글꼴 크기 조정 */
    .common-section h2 {
        font-size: 2rem; /* 공통 섹션 제목의 글꼴 크기를 2.5rem에서 2rem으로 줄입니다. */
    }
}